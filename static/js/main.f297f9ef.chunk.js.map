{"version":3,"sources":["components/ContactsList/Contact.js","components/ContactsList/ContactsList.js","components/Form/Form.js","components/Filter/Filter.js","App.js","index.js","components/ContactsList/Contact.module.css","components/Form/Form.module.css","components/Filter/Filter.module.css"],"names":["Contact","id","name","number","onDeleteContact","className","s","li","button","onClick","ContactsList","contacts","map","Form","onSubmit","onCheckUnique","useState","setName","setNumber","handleChange","e","target","value","reset","form","preventDefault","onChange","type","input","pattern","title","required","Filter","App","setContacts","filter","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","data","contact","uuidv4","isExistContact","find","alert","currentTarget","normalizedFilter","toLowerCase","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f297f9ef.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\n\r\nconst Contact = ({ id, name, number, onDeleteContact }) => {\r\n  return (\r\n    <li className={s.li}>\r\n      <span className={s.name}>{name}:</span>\r\n      <span className={s.number}>{number}</span>\r\n      <button className={s.button} onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Contact from './Contact';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <Contact\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Form.module.css';\r\n\r\nexport default function Form({ onSubmit, onCheckUnique }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const isUnicName = onCheckUnique(name);\r\n    if (!isUnicName) return;\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          value={name}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          value={number}\r\n          onChange={handleChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          className={s.input}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onCheckUnique: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        value={value}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactsList from './components/ContactsList';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = data => {\n    const contact = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n    setContacts([contact, ...contacts]);\n  };\n\n  const handleCheckUnique = name => {\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert(name + ' is already in contacts.');\n    return !isExistContact;\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Form onSubmit={addContact} onCheckUnique={handleCheckUnique} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactsList\n        contacts={getVisibleContacts()}\n        onDeleteContact={deleteContact}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"Contact_li__-wI3f\",\"name\":\"Contact_name__2xj0s\",\"number\":\"Contact_number__1OqLy\",\"button\":\"Contact_button__3PAUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2EUJ4\",\"input\":\"Form_input__2xwcq\",\"button\":\"Form_button__21Q2F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2nnsf\"};"],"sourceRoot":""}